clear;clc;

Fs= 4000
for i = 0:Fs-1
    fPSD(i+1) = i * Fs/ (Fs*2);
end
% clear;clc;close all;
% % [DATA, filename] = csvread('Subject1_Trial1.5.csv');
% % [DATA, filename] = csvread('EEG_SSVEPData_2017.08.10_16.13.42.csv');
% T = DATA(:,1);
% % xlslxsi = [1 80000];
% Fs = 2000; F_ECG = zeros(size(DATA,2)-1, size(DATA,1));
% for i=2:size(DATA,2)
%     F_ECG(i-1,:) = customFilt(DATA(:,i) , Fs, [0.5 100], 3);
% end
% figure;
% subplot(3,1,1);
% plot(T,DATA(:,2:3))
% % xlim(xlslxsi);
% subplot(3,1,2);
% plot(T,F_ECG(1,:));
% subplot(3,1,3);
% plot(T,F_ECG(2,:));
% xlim(xlslxsi);
%% s
clear;clc;close all;
load('s5.mat');
% EEG = pop_fileio('Dry_Electrodes_Rob_5ch\R_T1_C2.vhdr');
DATA = double(EEG.data(:,:));
DATA = double(DATA);
DATA = DATA'; DATA = (DATA./8388607).*2.25;
% filename = 'EEG_SSVEPData_2017.10.17_16.37.43_250Hz.csv';
% [DATA, filename] = csvread('EEG_SSVEPData_2017.10.25_18.04.53_250Hz.csv');
% [DATA, filename] = csvread('C:\Users\mmahmood31\OneDrive - Georgia Institute of Technology\Publishing\_SSVEP\_SSVEPDataShared\S3\Subject3_Trial1.1.csv');
%save new data: (DO ONLY ONCE!!!):
Fs = 250;
rS = 0*Fs; %Remove From Start
rE = 0*Fs; %Remove From End
F = [6.5 43];
winLim = [1 40];
numch = 2; datach = DATA(rS+1:end-rE,1:numch);
% Plot Raw Data
figure(95); 
% sel = 1:(10*Fs);
% subplot(2,1,1);
plot(DATA(:,1));
% subplot(2,1,2); plot(DATA(sel,2));
%%-Plot Analysis: %{
filtch = zeros(size(datach,1),numch);
hannWin = hann(2048); wlen = 1024; h=64; nfft = 4096;
K = sum(hamming(wlen, 'periodic'))/wlen;
for i = 1:numch %    
	filtch(:,i) = customFilt(datach(:,i),Fs,F,3); %figure(1); hold on; plot(filtch(:,i));
%     [f, P1] = get_fft_data(filtch(:,i),Fs); figure(2);hold on; plot(f,P1),xlim(winLim);
end
hannWin2 = hann(4096);
% filename = strrep(filename,'_','-');
fH = figure(4);
set(fH, 'Position', [15, 15, 1600, 920]); %Spect
for i = 1:numch
    [S1,wfreqs] = welch_psd(filtch(:,i), Fs, hannWin);
    M(i) = max(S1);
%     [S1_1{i},~] = welch_psd(DATA(:,i), Fs, hannWin);
    hold on; subplot(2,2,[1 2]);  plot(wfreqs, S1),xlim(winLim);xlabel('Frequency (Hz)'),ylabel('Power Density (W/Hz)')%,title([ filename(end-20:end), ' - ',  'Power Spectral Density Estimate']);
end
M2 = max(M); 
legend('Channel 1','Channel 2');
for i = 1:2
    subplot(2,2,i+2) % filtch
    [S1, f1, t1] = stft( filtch(:,i), wlen, h, nfft, Fs ); S2 = 20*log10(abs(S1(f1<winLim(2) & f1>winLim(1),:))/wlen/K + 1e-6); 
    imagesc(t1,f1(f1<winLim(2) & f1>winLim(1)),S2),xlim([min(t1) max(t1)]),ylim(winLim);
    set(gca,'YDir','normal');xlabel('Time, s');ylabel('Frequency, Hz');colormap(jet)
    cb = colorbar;ylabel(cb, 'Power (db)')
    title(['Ch' num2str(i)]);
end
% figure(5);
% [Sconv, wF2] = welch_psd(conv(filtch(:,1),filtch(:,2)),Fs, hannWin2);
% Scale_F = M2/max(Sconv);
% Sconv_scaled = Sconv*Scale_F;
% figure(4); subplot(2,2,[1 2]); plot(wF2, Sconv_scaled,'k')%,xlim(winLim);xlabel('Frequency (Hz)'),ylabel('Power Density (W/Hz)'),title('2-Channel Convoluted Power Spectral Density (W/Hz)')

% figure(96); %spectrum of raw data: 
% subplot(2,1,1); plot(wfreqs, S1_1{1}),xlim([6 65]);xlabel('Frequency (Hz)'),ylabel('Power Density (W/Hz)')%
% subplot(2,1,2); plot(wfreqs, S1_1{2}),xlim([6 65]);

%% 
X_1 = DATA(:,1);
X_2 = DATA(:,2);
pts = [1, 7935, 15500, 23425];
start = pts(1); range = 250:250:1000;
wStart = start:250:(length(X_1)-max(range));
PLOTDATA = 1==0;
THRESHOLD_FRACTION = 3;
for i = 1:length(wStart)
    CLASS(i) = classifySSVEP2(X_1(wStart(i):wStart(i)+999),PLOTDATA,THRESHOLD_FRACTION);
end
for i = 1:length(wStart)
    CLASS2(i) = classifySSVEP2(X_2(wStart(i):wStart(i)+999),PLOTDATA,THRESHOLD_FRACTION);
end
figure(7); 
h = 1/250;
t=0:h:(size(DATA,1)/250)-h;
hold on; 
plot(t,DATA(:,3),'r');
plot(CLASS),ylabel('Class Label'),xlabel('Time (s)'),title([filename '-Ch1']);
plot(CLASS2),legend('Target Class','Ch1','Ch2');
%% Feature Extraction: Expanding window method:
% Todo move to separate function 
close all;clc;
range = 250:60:1500;
cont = [];
showGraphs = true;
signalDetected = false;
wPlus = 250;        %-% Value by which to increase window length
winJump = 125;      %-% Data points to skip after each iteration. 
maxWinL = 1000;     %-% 5s max
ln = length(datach);
mW = 1:winJump:(ln - maxWinL);
ftr=1;
pts = [1, 7935, 15500, 23425];
start = pts(3);
cWSize = 250;           %-% Start with a window size of 1s
for i = 1:size(range,2)
    fin = start + (range(i)-1);
    fprintf('Current index = [%d to %d]\r\n',start, fin);
    fprintf('length = %d\r\n',range(i));
    for c = 1:numch
        fch = customFilt(datach(start:fin,c),Fs,[8 20],3);
    end
        %%%Feature Extraction: (per channel)
    F(i,:) = fESSVEP(fch,Fs,isempty(cont));
    if isempty(cont)
        commandwindow;
        cont = input('Approve/continue?\n');
        clf(12);
    end
    % Feature selection
end

%% Iterative (Fixed Window) Method: 
%{
close all;clc;
cont = [];
showGraphs = true;
signalDetected = false;
wPlus = 250;        %-% Value by which to increase window length
winJump = 125;      %-% Data points to skip after each iteration. 
maxWinL = 1000;     %-% 5s max
ln = length(datach);
mW = 1:winJump:(ln - maxWinL);
ftr=1;
startPoint = 1;
cWSize = 250;           %-% Start with a window size of 1s
for i=startPoint:length(mW)
    start = mW(i);          %-% Where to start window
    fin   = (mW(i)+(cWSize-1));   %-% Signal ends at start+current Win Length
    fprintf('Current index = [%d to %d]\r\n',start, fin);
    for c = 1:numch
        fch(c,:) = customFilt(datach(start:end,c),Fs,[8 20],3);
    end
        %%%Feature Extraction: (per channel)
    F = fESSVEP(fch(1,:),Fs,true);
    if isempty(cont)
        commandwindow;
        cont = input('Approve/continue?\n');
        clf(12);
    end
    % Feature selection: 1=accept, 9=run entirely, anything else =
    % continue/reject
    if (cont==1)
        tXSSVEP(i,:) = F(i,:);
        tY(i,1) = str2double(CLASS);
        ftr = ftr + 1;
        cont = [];
    else
        tXSSVEP(i,:) = F(i,:);
        tY(i,1) = 0; %REJECT CLASS
    end
    if ~isempty(cont) && cont~=9
        cont = [];
    end
end
%}
%% Classification EOG; 
%{
winSize = 250; %1s:
c=1;
for i = 1:250:length(ch1)-250
    ch1_p = ch1(i:i+249);
    ch2_p = ch2(i:i+249);
    ch3_p = ch3(i:i+249);
    Y(c) = eog_knn(ch1_p,ch2_p,ch3_p);
    c=c+1;
end
%}
%% EOG Classification?:
%{
range = 500:60:2500;
Window = cell(size(range,2),4);
Y = cell(size(range,2),1);
cont = [];
EOGONLY = false;
PLOTDATA = isempty(cont);
OUT = zeros(1,size(range,2));
History = zeros(size(range,2),4);
for i = 1:size(range,2)
    start = 1;
    winEnd = start + (range(i)-1);
    fprintf('Current index = [%d to %d]\r\n',start, winEnd);
    fprintf('Seconds Elapsed = [%1.2f]\r\n',winEnd/250);
    Window{i,1} = ch1( start : winEnd ); % set values:
    Window{i,2} = ch2( start : winEnd );
    Window{i,3} = ch3( start : winEnd );
    Window{i,4} = ch4( start : winEnd );
    [Y{i},F{i}] = fHC(Window{i,1}, Window{i,2}, Window{i,3}, ...
        Window{i,4}, Fs, EOGONLY, PLOTDATA);
    [History(i,:), OUT(i)] = featureAnalysis(F{i},winEnd);
    meanH = mean(History(1:i,:))
    if OUT(i)~=0
        countH(i) = countOccurrences(OUT(:,1:i), OUT(i));
    else
        countH(i) = 0;
    end
    if (max(meanH)>7) && countH(i)>=5
        OUTPROPER(i) = OUT(i);
    else
        OUTPROPER(i) = 0;
    end
    if isempty(cont)
        commandwindow;
        cont = input('Continue? \n');
    end
end
%}
% % EOF
